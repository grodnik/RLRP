@model RLRP.Core.ViewModels.ProjectManagerViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
  <h4>Project</h4>
  <hr />
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  @Html.HiddenFor(model => model.Project.Id)

  <div class="form-group">
    @Html.LabelFor(model => model.Project.Title, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.Title, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.Title, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.Area, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.DropDownListFor(model => model.Project.Area, new SelectList(Model.Areas, "AreaName", "AreaName"),
            new { htmlAttributes = new { @class = "form-control" } })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.Status, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.Status, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.Status, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.OldNbr, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.OldNbr, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.OldNbr, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.DefinedDate, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.DefinedDate, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.DefinedDate, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.BudgetYear, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.BudgetYear, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.BudgetYear, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.BudgetCost, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.BudgetCost, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.BudgetCost, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.BudgetLife, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.BudgetLife, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.BudgetLife, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.OddEven, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.OddEven, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.OddEven, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Project.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Project.Notes, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Project.Notes, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    <div class="col-md-offset-2 col-md-10">
      <input type="submit" value="Save" class="btn btn-default" />
    </div>
  </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
